<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netstandard2.0</TargetFramework>
        <LangVersion>preview</LangVersion>
        <Nullable>enable</Nullable>
    </PropertyGroup>

    <!-- References -->

    <ItemGroup>
        <PackageReference Include="Microsoft.Bcl.Memory" Version="9.0.4" />
        <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.11.0">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.12.0" />
        <PackageReference Include="PolySharp" Version="1.15.0">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Trarizon.Library.Collections" Version="1.0.0.3" PrivateAssets="all" GeneratePathProperty="true" />
    </ItemGroup>

    <!-- End References -->

    <PropertyGroup>
        <PolySharpIncludeGeneratedTypes>
            System.Diagnostics.CodeAnalysis.NotNullWhenAttribute;
        </PolySharpIncludeGeneratedTypes>
        <!--
            System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute;
            System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute;
            System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute;

            System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute;

            System.Runtime.CompilerServices.IsExternalInit;
            -->
    </PropertyGroup>

    <!-- Dependency -->

    <!--<Target Name="GetDependencyTargetPaths">
        <ItemGroup>
            <TargetPathWithTargetPlatformMoniker Include="$(PKGTrarizon_Library_Collections)\lib\netstandard2.0\Trarizon.Library.Collections.dll" IncludeRuntimeDependency="false" />
        </ItemGroup>
    </Target>

    <PropertyGroup>
        <GetTargetPathDependsOn>$(GetTargetPathDependsOn);GetDependencyTargetPaths</GetTargetPathDependsOn>
    </PropertyGroup>-->

    <!-- End Dependency -->

</Project>
