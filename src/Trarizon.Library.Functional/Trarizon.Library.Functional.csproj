<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFrameworks>netstandard2.0;netstandard2.1;net8.0;net9.0</TargetFrameworks>
        <LangVersion>preview</LangVersion>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    </PropertyGroup>

    <!-- Nuget -->

    <PropertyGroup>
        <Title>Trarizon.Library.Functional</Title>
        <!--<PackageReadmeFile>README.md</PackageReadmeFile>-->
        <Version>1.0.0.3</Version>
        <Description>Trarizon's personal library, for functional programming</Description>
    </PropertyGroup>

    <Import Project="..\..\Nuget.props" />

    <ItemGroup Label="NugetItems">
        <None Include="..\..\LICENSE" Pack="True" PackagePath="" />
        <!--<None Include="README.md" Pack="True" PackagePath="" />-->
    </ItemGroup>
    
    <!-- End Nuget-->

    <!-- Reference -->

    <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0' Or '$(TargetFramework)' == 'netstandard2.1'">
        <PackageReference Include="PolySharp" Version="1.15.0">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
    </ItemGroup>

    <!--<ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
    </ItemGroup>-->

    <!-- End Reference -->

    <PropertyGroup Label="Polyfills">
        <PolySharpIncludeGeneratedTypes>
            System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute;
            System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute;
            System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute;
            System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute;
        </PolySharpIncludeGeneratedTypes>
    </PropertyGroup>

</Project>
